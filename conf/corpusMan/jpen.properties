@import ../tokenize/japanese.properties
@import ../parallel/champollion.properties

# Note that user-defined variables that can be used in the configuration
# file must be capitalized for readability

# Any parallel corpus may be processed with a UniCorpusIterator, but not vice-versa

# TODO: Use temp files instead of shutdown hooks
# TODO: GZIP
# TODO: n-folds by sentence
# TODO: n-folds by document

# There are 3 basic items that may be defined in this properties file:
# 	1. a Corpus
#	2. a Run
#	3. a Run Set

#####################################################################
# CORPUS DEFINITIONS
#####################################################################

corpus.JPEN.rootDir = /media/disk/research/corpora/jpen
#corpus.JPEN.rootDir = f:/research/corpora/jpenaligned
corpus.JPEN.type = parallel
corpus.JPEN.parallel.targets = en ja aligned
corpus.JPEN.subdir.name = RUN

# The run type divides files from different corpus state changes
corpus.JPEN.RUN.type = run
corpus.JPEN.RUN.subdir.name = SERIES

# Note the use of the autonumber type, which takes the load off
# of the file system and limits the maximum number of files per
# directory. The patterns are defined by DecimalFormat in the Java API
corpus.JPEN.RUN.SERIES.type = autonumber
corpus.JPEN.RUN.SERIES.autonumber.filesPerDir = 1000
corpus.JPEN.RUN.SERIES.autonumber.pattern = 00000
corpus.JPEN.RUN.SERIES.autonumber.arrangeByFilename = true
corpus.JPEN.RUN.SERIES.subdir.name = NODE

# The node type indicates it is a directory that contains documents
# Parentheses are used to indicate where the file sequence number will
# be placed. The content of the parenteses should follow the specifications
# in DecimalFormat for the Java API.
corpus.JPEN.RUN.SERIES.NODE.type = node

# Also, a run directory can use the subset type, which
# indicates that file extenstions rather than directories
# This functionality will be implemented later

#####################################################################
# RUN DEFINITIONS
#
# A run represents some state change in the corpora
#####################################################################

# NOTE: A run processor must implement CorpusRun<T>

# A run set can be defined by a single line
runSet.JONMT.runs = ALIGN
#DOWNLOAD MOVE FIXENCODING FILTER TOTEXT TOKENIZE ALIGN GIZA TT MERT

# This run was only necessary because the files were already downloaded
run.MOVE.corpus = JPEN
run.MOVE.outputEncoding = UTF8
run.MOVE.type = parallel.create
run.MOVE.parallel.e = en
run.MOVE.parallel.f = ja
run.MOVE.create.filenamePattern = page(###0).txt
run.MOVE.processor = info.jonclark.corpus.languagetools.ja.MoveJPEN

# This run remains untested
run.DOWNLOAD.corpus = JPEN
run.DOWNLOAD.type = parallel.create
run.DOWNLOAD.create.filenamePattern = page(###0).txt
run.DOWNLOAD.processor = info.jonclark.corpus.parallel.DownloadParallelPages

# This was necessary because the download was not performed correctly
run.FIXENCODING.corpus = JPEN
run.FIXENCODING.type = uni.transform
run.FIXENCODING.transform.inputRun = DOWNLOAD
run.FIXENCODING.transform.parallelDirs = ja  
run.FIXENCODING.processor = info.jonclark.corpus.ReEncoder

run.FILTER.corpus = JPEN
run.FILTER.type = parallel.transform
run.FILTER.parallel.e = en
run.FILTER.parallel.f = ja
run.FILTER.transform.inputRun = MOVE
run.FILTER.processor = info.jonclark.corpus.languagetools.ja.FilterExpiredITMediaPages

run.TOTEXT.corpus = JPEN
run.TOTEXT.type = uni.transform
run.TOTEXT.transform.inputRun = FILTER
run.TOTEXT.transform.parallelDirs = ja en  
run.TOTEXT.processor = info.jonclark.corpus.parallel.HtmlToChampollionConverter

run.TOKENIZE.corpus = JPEN
run.TOKENIZE.parallel.e = en
run.TOKENIZE.parallel.f = ja
run.TOKENIZE.type = parallel.transform
run.TOKENIZE.transform.inputRun = TOTEXT
run.TOKENIZE.processor = info.jonclark.corpus.tokenize.JapaneseTokenizer

# NOTE: If the parallel destination does not exist, you must first create it
run.ALIGN.corpus = JPEN
run.ALIGN.type = parallel.align
run.ALIGN.parallel.e = en
run.ALIGN.parallel.f = ja
run.ALIGN.align.parallelDest = aligned
run.ALIGN.align.inputRun = TOKENIZE 
run.ALIGN.processor = info.jonclark.corpus.parallel.AkerbladAligner

run.UNIDUMMY.corpus = JPEN
run.UNIDUMMY.type = uni.create
run.UNIDUMMY.create.parallelDest = whatever
run.UNIDUMMY.create.filenamePattern = page(###0)
run.UNIDUMMY.processor = none
