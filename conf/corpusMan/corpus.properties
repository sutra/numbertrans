# Note that user-defined variables that can be used in the configuration
# file must be capitalized for readability

# Any parallel corpus may be processed with a UniCorpusIterator, but not vice-versa

#####################################################################
# CORPUS DEFINITIONS
#####################################################################

parallelCorpus.1.corpusName = JPEN
parallelCorpus.1.rootDir = /media/disk/research/corpora/jpen
parallelCorpus.1.subdir.type = parallel
parallelCorpus.1.subdir.name = LANG
parallelCorpus.1.subdir.parallel.pattern = jp,en

# Note the use of the autonumber type, which takes the load off
# of the file system and limits the maximum number of files per
# directory. The patterns are defined by the Java NumberFormat class
parallelCorpus.1.LANG.subdir.name = SERIES
parallelCorpus.1.LANG.subdir.type = autonumber
parallelCorpus.1.LANG.subdir.autonumber.filesPerDir = 1000
parallelCorpus.1.LANG.subdir.autonumber.pattern = 0000

# Note that the node type can be combined with any other type
# The node type indicates it is a directory that contains documents
# The run type divides files from different corpus state changes
parallelCorpus.1.LANG.SERIES.subdir.type = run,node
parallelCorpus.1.LANG.SERIES.subdir.name = RUN

# Also, a run directory can use the subset type, which
# indicates that file extenstions rather than directories
# This functionality will be implemented later

#####################################################################
# RUN DEFINITIONS
#
# A run represents some state change in the corpora
#####################################################################


# NOTE that this forces an order on runs such that they can be automated later on
# Also, the processor must implement CorpusRun<T>
run.JPEN.1.runName = download
run.JPEN.1.type = create
run.JPEN.1.processor = info.jonclark.corpus.parallel.Download

run.JPEN.2.runName = totext
run.JPEN.2.type = transform
run.JPEN.2.transform.inputRun = download 
run.JPEN.2.processor = info.jonclark.corpus.parallel.ToText

run.JPEN.3.runName = tokenize
run.JPEN.3.type = transform
run.JPEN.3.transform.inputRun = totext 
run.JPEN.3.processor = info.jonclark.corpus.tokenize.JapaneseTokenize