# Note that user-defined variables that can be used in the configuration
# file must be capitalized for readability

# Any parallel corpus may be processed with a UniCorpusIterator, but not vice-versa

# TODO: GZIP
# TODO: n-folds by sentence
# TODO: n-folds by document

# Features:
# * Prevent incomplete documents by deleting files that were partially
# written but had an exception during generation
# * Prompt when overwriting files

# There are 3 basic items that may be defined in this properties file:
# 	1. a Corpus
#	2. a Run
#	3. a Run Set

#####################################################################
# CORPUS DEFINITIONS
#####################################################################

#corpus.JPEN.rootDir = f:/media/disk/research/corpora/test
corpus.JPEN.rootDir = f:/research/corpora/test
corpus.JPEN.type = parallel
corpus.JPEN.parallel.targets = en ja aligned
corpus.JPEN.subdir.name = RUN

# The run type divides files from different corpus state changes
corpus.JPEN.RUN.type = run
corpus.JPEN.RUN.subdir.name = SERIES

# Note the use of the autonumber type, which takes the load off
# of the file system and limits the maximum number of files per
# directory. The patterns are defined by DecimalFormat in the Java API
corpus.JPEN.RUN.SERIES.type = autonumber
corpus.JPEN.RUN.SERIES.autonumber.filesPerDir = 2
corpus.JPEN.RUN.SERIES.autonumber.pattern = 0000
corpus.JPEN.RUN.SERIES.autonumber.arrangeByFilename = false
corpus.JPEN.RUN.SERIES.subdir.name = NODE

# The node type indicates it is a directory that contains documents
# Parentheses are used to indicate where the file sequence number will
# be placed. The content of the parenteses should follow the specifications
# in DecimalFormat for the Java API.
corpus.JPEN.RUN.SERIES.NODE.type = node

# Also, a run directory can use the subset type, which
# indicates that file extenstions rather than directories
# This functionality will be implemented later

#####################################################################
# RUN DEFINITIONS
#
# A run represents some state change in the corpora
#####################################################################

# NOTE: A run processor must implement CorpusRun<T>

# A run set can be defined by a single line
runSet.TEST.runs = UNICREATE_TEST UNITRANSFORM_TEST PARCREATE_TEST PARTRANSFORM_TEST PARALIGN_TEST

# During creation, a filename pattern may be specified for auto-naming
run.UNICREATE_TEST.corpus = JPEN
run.UNICREATE_TEST.type = uni.create
run.UNICREATE_TEST.create.parallelDest = en
run.UNICREATE_TEST.create.filenamePattern = page(###0).txt
run.UNICREATE_TEST.processor = info.jonclark.corpus.management.test.UniCreateTest

run.UNITRANSFORM_TEST.corpus = JPEN
run.UNITRANSFORM_TEST.type = uni.transform
run.UNITRANSFORM_TEST.transform.parallelDirs = en
run.UNITRANSFORM_TEST.transform.inputRun = UNICREATE_TEST
run.UNITRANSFORM_TEST.processor = info.jonclark.corpus.management.test.UniTransformTest

run.PARCREATE_TEST.corpus = JPEN
run.PARCREATE_TEST.type = parallel.create
run.PARCREATE_TEST.parallel.e = en
run.PARCREATE_TEST.parallel.f = ja
run.PARCREATE_TEST.create.filenamePattern = page(###0).txt
run.PARCREATE_TEST.processor = info.jonclark.corpus.management.test.ParallelCreateTest

run.PARTRANSFORM_TEST.corpus = JPEN
run.PARTRANSFORM_TEST.type = parallel.transform
run.PARTRANSFORM_TEST.parallel.e = en
run.PARTRANSFORM_TEST.parallel.f = ja
run.PARTRANSFORM_TEST.transform.inputRun = PARCREATE_TEST
run.PARTRANSFORM_TEST.processor = info.jonclark.corpus.management.test.ParallelTransformTest

# NOTE: If the parallel destination does not exist in ths corpus definition, you must first create it
run.PARALIGN_TEST.corpus = JPEN
run.PARALIGN_TEST.type = parallel.align
run.PARALIGN_TEST.parallel.e = en
run.PARALIGN_TEST.parallel.f = ja
run.PARALIGN_TEST.align.parallelDest = aligned
run.PARALIGN_TEST.align.inputRun = PARTRANSFORM_TEST 
run.PARALIGN_TEST.processor = info.jonclark.corpus.management.test.ParallelAlignTest


# When specifying a TRANSFORM run for a UniCorpus, the user should be able to specify a
# parallel directory, multiple parallel directories, ALL parallel directories, or NONE

# TODO: Provide a method of calling external scripts (but note how dangerous doing this is)